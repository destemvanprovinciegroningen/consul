version: 0.2
phases:

  pre_build:
    commands:
    ##
    # Install helm
    - wget https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz
    - tar -xvf helm-v3.5.4-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin; chmod a+x /usr/local/bin/helm

    ##
    # ecr docker login
    - eval $(aws ecr get-login --no-include-email --region $AWS_REGION | sed 's;https://;;g')

    ##
    # Docker Image Tag with Date Time & Code Build Resolved Source Version
    - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"

    ##
    # Verify AWS CLI Version
    - echo "Verify AWS CLI Version..."
    - aws --version

    ##
    # Update Kube config Home Directory
    - export KUBECONFIG=$HOME/.kube/config
    
  build:
    commands:
    ##
    # Building the docker image with theme
    - docker build -t ${nameOverride} . --build-arg THEME=${theme}
    - docker tag ${nameOverride}:latest ${image_repository}:${CODEBUILD_BUILD_NUMBER}

  post_build:
    commands:
    ##
    # Push the resulting image
    - docker push ${image_repository}:${CODEBUILD_BUILD_NUMBER}

    ##
    # Setup kubectl with our EKS Cluster
    - echo "Update Kube Config"
    - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region eu-west-1

    - env
    - |
      helm upgrade --install consul-${WORKSPACE} \
      https://${PERSONAL_ACCESS_TOKEN}@raw.githubusercontent.com/kabisa-cloud/helm_consul/master/consul-charts/consul-${CHART_VERSION}.tgz \
      --namespace ${WORKSPACE} \
      --version ${CHART_VERSION} \
      --set name=provinciegroningen-acc \
      --set nameOverride="${nameOverride}" \
      --set fullnameOverride="${fullnameOverride}" \
      --set replicaCount="${replicaCount}" \
      --set auth="${auth}" \
      --set image.repository="${image_repository}" \
      --set image.tag="${CODEBUILD_BUILD_NUMBER}" \
      --set svcaccname="${svcaccname}" \
      --set stage="${stage}" \
      --set rails_env="${rails_env}" \
      --set newrelic.enabled="${newrelic_enabled}" \
      --set salt_key="${salt_key}" \
      --set domainPrefix="${DOMAINPREFIX}" \
      --set lock="${locked}" \
      --set rds.hostname="${rds_hostname}" \
      --set rds.database="${rds_database}" \
      --set rds.username="${rds_username}" \
      --set rds.password="${rds_password}" \
      --set smtp.hostname="${smtp_hostname}" \
      --set smtp.username="${smtp_username}" \
      --set smtp.password="${smtp_password}" \
      --set acm.arn="${acm_arn}" \
      --set s3bucket.host="${s3bucket_host}" \
      --set s3bucket.name="${s3bucket_name}" \
      --set s3bucket.region="${s3bucket_region}" \
      --set s3bucket.cdn="${s3bucket_cdn}" \
      --set adminips_enabled="${adminips_enabled}" \
      --set "adminips={${adminips}}"
